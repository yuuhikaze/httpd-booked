#
# When we also provide SSL we have to listen to the 
# the HTTPS port in addition.
#
Listen 443 https

##
##  SSL Global Context
##
##  All SSL configuration in this context applies both to
##  the main server and all SSL-enabled virtual hosts.
##

#   Pass Phrase Dialog:
#   Configure the pass phrase gathering process.
#   The filtering dialog program (`builtin' is a internal
#   terminal dialog) has to provide the pass phrase on stdout.
SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog

#   Inter-Process Session Cache:
#   Configure the SSL Session Cache: First the mechanism 
#   to use and second the expiring timeout (in seconds).
SSLSessionCache         shmcb:/run/httpd/sslcache(512000)
SSLSessionCacheTimeout  300

#   Pseudo Random Number Generator (PRNG):
#   Configure one or more sources to seed the PRNG of the 
#   SSL library. The seed data should be of good random quality.
#   WARNING! On some platforms /dev/random blocks if not enough entropy
#   is available. This means you then cannot use the /dev/random device
#   because it would lead to very long connection times (as long as
#   it requires to make more entropy available). But usually those
#   platforms additionally provide a /dev/urandom device which doesn't
#   block. So, if available, use this one instead. Read the mod_ssl User
#   Manual for more details.
SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin
#SSLRandomSeed startup file:/dev/random  512
#SSLRandomSeed connect file:/dev/random  512
#SSLRandomSeed connect file:/dev/urandom 512

#
# Use "SSLCryptoDevice" to enable any supported hardware
# accelerators. Use "openssl engine -v" to list supported
# engine names.  NOTE: If you enable an accelerator and the
# server does not start, consult the error logs and ensure
# your accelerator is functioning properly. 
#
SSLCryptoDevice builtin
#SSLCryptoDevice ubsec

##
## SSL Virtual Host Context
##

<VirtualHost _default_:443>

# General setup for the virtual host, inherited from global configuration
#DocumentRoot "/var/www/html"
#ServerName www.example.com:443
ServerName www4.usfq.edu.ec:443

# Use separate log files for the SSL virtual host; note that LogLevel
# is not inherited from httpd.conf.
ErrorLog logs/ssl_error_log
TransferLog logs/ssl_access_log
LogLevel warn

#   SSL Engine Switch:
#   Enable/Disable SSL for this virtual host.
SSLEngine on

#   SSL Protocol support:
# List the enable protocol levels with which clients will be able to
# connect.  Disable SSLv2 access by default:
#SSLProtocol all -SSLv2 -SSLv3
SSLProtocol all -SSLv2 -SSLv3 -TLSv1

#   SSL Cipher Suite:
#   List the ciphers that the client is permitted to negotiate.
#   See the mod_ssl documentation for a complete list.
#SSLCipherSuite HIGH:3DES:!aNULL:!MD5:!SEED:!IDEA

SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:ECDHE-RSA-AES128-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA128:DHE-RSA-AES128-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA128:ECDHE-RSA-AES128-SHA384:ECDHE-RSA-AES128-SHA128:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA384:AES128-GCM-SHA128:AES128-SHA128:AES128-SHA128:AES128-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4:!3DES

#   Speed-optimized SSL Cipher configuration:
#   If speed is your main concern (on busy HTTPS servers e.g.),
#   you might want to force clients to specific, performance
#   optimized ciphers. In this case, prepend those ciphers
#   to the SSLCipherSuite list, and enable SSLHonorCipherOrder.
#   Caveat: by giving precedence to RC4-SHA and AES128-SHA
#   (as in the example below), most connections will no longer
#   have perfect forward secrecy - if the server's key is
#   compromised, captures of past or future traffic must be
#   considered compromised, too.
#SSLCipherSuite RC4-SHA:AES128-SHA:HIGH:MEDIUM:!aNULL:!MD5
SSLHonorCipherOrder on 

#   Server Certificate:
# Point SSLCertificateFile at a PEM encoded certificate.  If
# the certificate is encrypted, then you will be prompted for a
# pass phrase.  Note that a kill -HUP will prompt again.  A new
# certificate can be generated using the genkey(1) command.
#SSLCertificateFile /etc/pki/tls/certs/localhost.crt
SSLCertificateFile /etc/pki/tls/certs/www4.crt

#   Server Private Key:
#   If the key is not combined with the certificate, use this
#   directive to point at the key file.  Keep in mind that if
#   you've both a RSA and a DSA private key you can configure
#   both in parallel (to also allow the use of DSA ciphers, etc.)
#SSLCertificateKeyFile /etc/pki/tls/private/localhost.key
SSLCertificateKeyFile /etc/pki/tls/private/www4.key

#   Server Certificate Chain:
#   Point SSLCertificateChainFile at a file containing the
#   concatenation of PEM encoded CA certificates which form the
#   certificate chain for the server certificate. Alternatively
#   the referenced file can be the same as SSLCertificateFile
#   when the CA certificates are directly appended to the server
#   certificate for convinience.
#SSLCertificateChainFile /etc/pki/tls/certs/server-chain.crt
SSLCertificateChainFile /etc/pki/tls/certs/DigiCertCA.crt

#   Certificate Authority (CA):
#   Set the CA certificate verification path where to find CA
#   certificates for client authentication or alternatively one
#   huge file containing all of them (file must be PEM encoded)
#SSLCACertificateFile /etc/pki/tls/certs/ca-bundle.crt

#   Client Authentication (Type):
#   Client certificate verification type and depth.  Types are
#   none, optional, require and optional_no_ca.  Depth is a
#   number which specifies how deeply to verify the certificate
#   issuer chain before deciding the certificate is not valid.
#SSLVerifyClient require
#SSLVerifyDepth  10

#   Access Control:
#   With SSLRequire you can do per-directory access control based
#   on arbitrary complex boolean expressions containing server
#   variable checks and other lookup directives.  The syntax is a
#   mixture between C and Perl.  See the mod_ssl documentation
#   for more details.
#<Location />
#SSLRequire (    %{SSL_CIPHER} !~ m/^(EXP|NULL)/ \
#            and %{SSL_CLIENT_S_DN_O} eq "Snake Oil, Ltd." \
#            and %{SSL_CLIENT_S_DN_OU} in {"Staff", "CA", "Dev"} \
#            and %{TIME_WDAY} >= 1 and %{TIME_WDAY} <= 5 \
#            and %{TIME_HOUR} >= 8 and %{TIME_HOUR} <= 20       ) \
#           or %{REMOTE_ADDR} =~ m/^192\.76\.162\.[0-9]+$/
#</Location>

#   SSL Engine Options:
#   Set various options for the SSL engine.
#   o FakeBasicAuth:
#     Translate the client X.509 into a Basic Authorisation.  This means that
#     the standard Auth/DBMAuth methods can be used for access control.  The
#     user name is the `one line' version of the client's X.509 certificate.
#     Note that no password is obtained from the user. Every entry in the user
#     file needs this password: `xxj31ZMTZzkVA'.
#   o ExportCertData:
#     This exports two additional environment variables: SSL_CLIENT_CERT and
#     SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
#     server (always existing) and the client (only existing when client
#     authentication is used). This can be used to import the certificates
#     into CGI scripts.
#   o StdEnvVars:
#     This exports the standard SSL/TLS related `SSL_*' environment variables.
#     Per default this exportation is switched off for performance reasons,
#     because the extraction step is an expensive operation and is usually
#     useless for serving static content. So one usually enables the
#     exportation for CGI and SSI requests only.
#   o StrictRequire:
#     This denies access when "SSLRequireSSL" or "SSLRequire" applied even
#     under a "Satisfy any" situation, i.e. when it applies access is denied
#     and no other module can change it.
#   o OptRenegotiate:
#     This enables optimized SSL connection renegotiation handling when SSL
#     directives are used in per-directory context. 
#SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
<Files ~ "\.(cgi|shtml|phtml|php3?)$">
    SSLOptions +StdEnvVars
</Files>
<Directory "/var/www/cgi-bin">
    SSLOptions +StdEnvVars
</Directory>

#   SSL Protocol Adjustments:
#   The safe and default but still SSL/TLS standard compliant shutdown
#   approach is that mod_ssl sends the close notify alert but doesn't wait for
#   the close notify alert from client. When you need a different shutdown
#   approach you can use one of the following variables:
#   o ssl-unclean-shutdown:
#     This forces an unclean shutdown when the connection is closed, i.e. no
#     SSL close notify alert is send or allowed to received.  This violates
#     the SSL/TLS standard but is needed for some brain-dead browsers. Use
#     this when you receive I/O errors because of the standard approach where
#     mod_ssl sends the close notify alert.
#   o ssl-accurate-shutdown:
#     This forces an accurate shutdown when the connection is closed, i.e. a
#     SSL close notify alert is send and mod_ssl waits for the close notify
#     alert of the client. This is 100% SSL/TLS standard compliant, but in
#     practice often causes hanging connections with brain-dead browsers. Use
#     this only for browsers where you know that their SSL implementation
#     works correctly. 
#   Notice: Most problems of broken clients are also related to the HTTP
#   keep-alive facility, so you usually additionally want to disable
#   keep-alive for those clients, too. Use variable "nokeepalive" for this.
#   Similarly, one has to force some clients to use HTTP/1.0 to workaround
#   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
#   "force-response-1.0" for this.
BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0

#   Per-Server Logging:
#   The home of a custom SSL log file. Use this when you want a
#   compact non-error SSL logfile on a virtual host basis.
CustomLog logs/ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

</VirtualHost>                                  

<VirtualHost *:443>
        ServerAdmin webmaster@usfq.edu.ec
        ServerAlias pagos.usfq.edu.ec
        ServerName pagos.usfq.edu.ec
        RedirectMatch (.*) https://www.usfq.edu.ec/hallpagos/Pages/default.aspx
</VirtualHost>

<VirtualHost *:443>
        ServerAdmin webmaster@usfq.edu.ec
        ServerAlias sd.usfq.edu.ec
        ServerName sd.usfq.edu.ec
        RedirectMatch (.*) https://servicedesk.usfq.edu.ec/proactivanet/servicedesk/default.paw
</VirtualHost>

<VirtualHost *:443>

        ServerAdmin webmaster@usfq.edu.ec
        ServerAlias mysite.usfq.edu.ec
        ServerName mysite.usfq.edu.ec
        RedirectMatch (.*) https://miusfq.usfq.edu.ec
</VirtualHost>

<VirtualHost *:443>

        ServerAdmin webmaster@usfq.edu.ec
        ServerAlias blogcompetencia.usfq.edu.ec
        ServerName blogcompetencia.usfq.edu.ec
        RedirectMatch (.*) https://blogcompetencia/blog1
</VirtualHost>

<VirtualHost *:443>

        ServerAdmin webmaster@usfq.edu.ec
        ServerAlias blogcompetencia.usfq.edu.ec
        ServerName blogcompetencia.usfq.edu.ec
        RedirectMatch (.*) https://blogcompetencia/blog1
</VirtualHost>

<VirtualHost *:443>

        ServerAdmin webmaster@usfq.edu.ec
        ServerAlias blogdlcompetencia.usfq.edu.ec
        ServerName blogcompetencia.usfq.edu.ec
        RedirectMatch (.*) https://blogdlcompetencia/blog2
</VirtualHost>

<VirtualHost *:443>
        ServerAdmin webmaster@usfq.edu.ec
        ServerAlias d2l.usfq.edu.ec
        ServerName d2l.usfq.edu.ec
        RedirectMatch (.*) https://miusfv.usfq.edu.ec/index_local.asp
</VirtualHost>

<VirtualHost *:443>
        ServerAdmin webmaster@usfq.edu.ec
        ServerName aulamagna.usfq.edu.ec
        ServerAlias aulamagna.usfq.edu.ec
        DocumentRoot /home/aulamagna/aulamagna/
        SSLEngine on
        SSLCertificateFile /etc/pki/tls/certs/www4.crt
        SSLCertificateKeyFile /etc/pki/tls/private/www4.key
        SSLCertificateChainFile /etc/pki/tls/certs/DigiCertCA.crt
        CustomLog logs/aulamagna.usfq.edu.ec-access.log combined
</VirtualHost>

<VirtualHost *:443>
        ServerAdmin webmaster@usfq.edu.ec
        ServerName votomysite2.usfq.edu.ec
        ServerAlias votomysite2.usfq.edu.ec
        DocumentRoot /home/vmysite
        SSLEngine on
        SSLCertificateFile /etc/pki/tls/certs/www4.crt
        SSLCertificateKeyFile /etc/pki/tls/private/www4.key
        SSLCertificateChainFile /etc/pki/tls/certs/DigiCertCA.crt
        CustomLog logs/votomysite2.usfq.edu.ec-access.log combined
</VirtualHost>

<VirtualHost *:443>
        ServerAdmin webmaster@usfq.edu.ec
        ServerName marketingdigital.usfq.edu.ec
        ServerAlias marketingdigital.usfq.edu.ec
        DocumentRoot /home/adminsocial/
        CustomLog logs/marketingdigital.usfq.edu.ec-access.log combined
</VirtualHost>

#<VirtualHost *:443>
#
#        ServerAdmin webmaster@usfq.edu.ec
#        ServerAlias revistas.usfq.edu.ec
#        ServerName revistas.usfq.edu.ec
#       DocumentRoot /home/ojs-2.4.6/
#       CustomLog logs/ojs.usfq.edu.ec-access.log combined
#
#</VirtualHost>
#
#<VirtualHost *:443>
#
#        ServerAdmin webmaster@usfq.edu.ec
#        ServerAlias aulamagna.usfq.edu.ec
#        ServerName aulamagna.usfq.edu.ec
#        DocumentRoot /home/aulamagna/aulamagna
#               CustomLog logs/aulamagnassl.usfq.edu.ec-access.log combined
#SSLCertificateChainFile /etc/pki/tls/certs/DigiCertCA.crt
#SSLCertificateKeyFile /etc/pki/tls/private/www4.key
#SSLCertificateFile /etc/pki/tls/certs/www4.crt

#</VirtualHost>

<VirtualHost *:443>
        ServerAdmin webmaster@usfq.edu.ec
        ServerName sso.usfq.edu.ec
        ServerAlias sso.usfq.edu.ec
        DocumentRoot /home/usfq_phpcas_hubi/usfq/
        CustomLog logs/sso.usfq.edu.ec-access.log combined
</VirtualHost>

<VirtualHost *:443>
        ServerAdmin webmaster@usfq.edu.ec
        ServerName registration.usfq.edu.ec
        ServerAlias registration.usfq.edu.ec
        RedirectMatch (.*) https://p-ban-app-08.usfq.edu.ec:8443/StudentRegistrationSsb/ssb/registration/
        CustomLog logs/sso.usfq.edu.ec-access.log combined
</VirtualHost>

<VirtualHost *:443>
        ServerName yachaks.espiritualidadesquito.com
        ServerAlias yachaks.espiritualidadesquito.com
        RedirectMatch (.*) https://www.espiritualidadesquito.com/?page_id=174
</VirtualHost>

<VirtualHost *:443>
        ServerName vaisnavismo.espiritualidadesquito.com
        ServerAlias vaisnavismo.espiritualidadesquito.com
        RedirectMatch (.*) https://www.espiritualidadesquito.com/?page_id=188
</VirtualHost>

<VirtualHost *:443>
        ServerName sd.usfq.edu.ec
        ServerAlias sd.usfq.edu.ec
       RedirectMatch (.*) https://servicedesk.usfq.edu.ec/proactivanet/servicedesk/default.paw
</VirtualHost>

<VirtualHost *:443>
        ServerName optimizacion.usfq.edu.ec
        ServerAlias optimizacion.usfq.edu.ec
       RedirectMatch (.*) https://proyectos.usfq.edu.ec/optimizacion/
</VirtualHost>

<VirtualHost *:443>
        ServerAdmin webmaster@usfq.edu.ec
        ServerName cursosti.usfq.edu.ec
        ServerAlias cursosti.usfq.edu.ec
        DocumentRoot /home/cursosti/
        CustomLog logs/cursosti.usfq.edu.ec-access.log combined
</VirtualHost>

<VirtualHost *:443>
        ServerAdmin webmaster@usfq.edu.ec
        ServerName productosti.usfq.edu.ec
        ServerAlias productosti.usfq.edu.ec
        DocumentRoot /home/SABIAS/
        CustomLog logs/productosti.usfq.edu.ec-access.log combined
</VirtualHost>

<VirtualHost *:443>
        ServerName regulaciones.usfq.edu.ec
        ServerAlias regulaciones.usfq.edu.ec
       RedirectMatch (.*) https://www.usfq.edu.ec/sobre_la_usfq/informacion_institucional/regulaciones_institucionales/Paginas/default.aspx
</VirtualHost>

<VirtualHost *:443>
        ServerName proyectores.usfq.edu.ec
        ServerAlias proyectores.usfq.edu.ec
        RedirectMatch (.*) https://www4.usfq.edu.ec/proyectores/
</VirtualHost>

<VirtualHost *:443>
        ServerName formasdepago.usfq.edu.ec
        ServerAlias formasdepago.usfq.edu.ec
        RedirectMatch (.*) https://www.usfq.edu.ec/sobre_la_usfq/Documents/WEB_PAGOS_Mesa_de_trabajo_1.pdf
</VirtualHost>

<VirtualHost *:443>
        ServerName requisitosplandepagos.usfq.edu.ec
        ServerAlias requisitosplandepagos.usfq.edu.ec
        RedirectMatch (.*) https://www.usfq.edu.ec/sobre_la_usfq/Documents/2019_2020/requisitos-financiamiento-2019-2020.pdf
</VirtualHost>
<VirtualHost *:443>
        ServerName catena.usfq.edu.ec
        ServerAlias catena.usfq.edu.ec
        RedirectMatch (.*) https://www.usfq.edu.ec/programas_academicos/colegios/politecnico/institutos/innovacion_y_logistica/Paginas/default.aspx
</VirtualHost>
<VirtualHost *:443>
        ServerName ace.usfq.edu.ec
        ServerAlias ace.usfq.edu.ec
        RedirectMatch (.*) https://estudusfqedu.sharepoint.com/sites/ace
</VirtualHost>

<VirtualHost *:443>
        ServerName testinfra.usfq.edu.ec
        ServerAlias testinfra.usfq.edu.ec
        RedirectMatch (.*) https://estudusfqedu.sharepoint.com/sites/testti/
</VirtualHost>


<VirtualHost *:443>
        ServerName globalhealth.usfq.edu.ec
        ServerAlias globalhealth.usfq.edu.ec
        RedirectMatch (.*) https://www.usfq.edu.ec/programas_academicos/colegios/cocsa/globalhealth/
</VirtualHost>

<VirtualHost *:443>
        ServerName  unicornio.usfq.edu.ec
        ServerAlias unicornio.usfq.edu.ec
        RedirectMatch (.*) https://www.usfq.edu.ec/eventos/doers_day/Paginas/default.aspx
</VirtualHost>

<VirtualHost *:443>
        ServerName documentonotario.usfq.edu.ec
        ServerAlias documentonotarioausfq.edu.ec
        RedirectMatch (.*) https://www.usfq.edu.ec/admisiones/becas_prestamos/Documents/Senior_Notario_2019%20ACTUALIZADO.pdf
</VirtualHost>

<VirtualHost *:443>
        ServerName johndewey.usfq.edu.ec
        ServerAlias ohndewey.usfq.edu.ec
        RedirectMatch (.*) https://www.usfq.edu.ec/admisiones/becas/dewey/Paginas/default.aspx
</VirtualHost>

<VirtualHost *:443>
        ServerName infra.usfq.edu.ec
        ServerAlias infra.usfq.edu.ec
        RedirectMatch (.*) https://proyectos.usfq.edu.ec/infraestructura-ti/_layouts/15/start.aspx#/default.aspx
</VirtualHost>
<VirtualHost *:443>
        ServerName aci.usfq.edu.ec
        ServerAlias aci.usfq.edu.ec
        RedirectMatch (.*) https://www.usfq.edu.ec/eventos/certificacion_hormigon/Paginas/default.aspx
</VirtualHost>

<VirtualHost *:443>
        ServerName virtual.usfq.edu.ec
        ServerAlias virtual.usfq.edu.ec
        RedirectMatch (.*) https://www.usfq.edu.ec/sobre_la_usfq/en_linea/Paginas/default.aspx
</VirtualHost>

<VirtualHost *:443>
        ServerName miusfq.usfq.edu.ec
        ServerAlias miusfq.usfq.edu.ec
        RedirectMatch (.*) https://mysite.usfq.edu.ec
</VirtualHost>



